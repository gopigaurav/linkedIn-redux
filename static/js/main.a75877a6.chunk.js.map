{"version":3,"sources":["components/Body/Feed/InputOption.js","components/Body/Post/Post.js","firebase.js","features/userSlice.js","components/Body/Feed/Feed.js","components/Body/Sidebar/Sidebar.js","components/Body/Widget/Widgets.js","components/Header/HeaderOption.js","components/Header/Header.js","components/Login/Login.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["InputOption","Icon","title","color","className","style","Post","forwardRef","ref","name","description","message","photoUrl","Avatar","src","ThumbUpAltOutlinedIcon","ChatOutlinedIcon","ShareOutlinedIcon","SendOutlinedIcon","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","userSlice","createSlice","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","Feed","useSelector","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","value","onChange","e","target","type","onClick","preventDefault","add","displayName","email","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Sidebar","recentItems","topic","alt","Widgets","newsArticle","heading","subtitle","HeaderOption","avatar","Header","dispatch","useDispatch","placeholder","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileUrl","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","App","onAuthStateChanged","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a75877a6.chunk.js","sourcesContent":["import React from 'react';\nimport './InputOption.css';\n\nfunction InputOption({ Icon, title, color }) {\n  return <div className=\"inputOption\">\n    <Icon style={{ color: color}} />\n    <h4>{title}</h4>\n  </div>;\n};\n\nexport default InputOption;\n","import { Avatar } from '@material-ui/core';\nimport React, { forwardRef } from 'react';\nimport InputOption from '../Feed/InputOption';\nimport './Post.css';\nimport ThumbUpAltOutlinedIcon from '@material-ui/icons/ThumbUpAltOutlined';\nimport ChatOutlinedIcon from '@material-ui/icons/ChatOutlined';\nimport ShareOutlinedIcon from '@material-ui/icons/ShareOutlined';\nimport SendOutlinedIcon from '@material-ui/icons/SendOutlined';\n\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\n  return (\n    <div ref={ref} className=\"post\">\n        <div className=\"post_header\">\n          <Avatar src={photoUrl}></Avatar>\n          <div className=\"postInfo\">\n            <h2>{name}</h2>\n            <p>{description}</p>\n          </div>\n        </div>\n        <div className=\"post_body\">\n          <p>{message}</p>\n        </div>\n        <div className=\"post_buttons\">\n          <InputOption Icon={ThumbUpAltOutlinedIcon} title=\"Like\" color=\"gray\" />\n          <InputOption Icon={ChatOutlinedIcon} title=\"Comment\" color=\"gray\" />\n          <InputOption Icon={ShareOutlinedIcon} title=\"Share\" color=\"gray\" />\n          <InputOption Icon={SendOutlinedIcon} title=\"Send\" color=\"gray\" />\n        </div>\n    </div>\n  );\n});\n\nexport default Post;\n","import firebase from 'firebase'\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBFEziu4_WGDNwgm2xf3vdKVz-SvjNNsas\",\n  authDomain: \"linkedin-clone-72ac6.firebaseapp.com\",\n  projectId: \"linkedin-clone-72ac6\",\n  storageBucket: \"linkedin-clone-72ac6.appspot.com\",\n  messagingSenderId: \"989846420955\",\n  appId: \"1:989846420955:web:e17621af77126f2f303bfe\",\n  measurementId: \"G-CFHGCB17ZW\"\n};\n\n\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\n\nexport { db, auth };\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const userSlice = createSlice({\r\n  name: 'user',\r\n  initialState: {\r\n    user: null,\r\n  },\r\n  reducers: {\r\n    login: (state, action) => {\r\n      state.user = action.payload;\r\n    },\r\n    logout: (state) => {\r\n      state.user += null;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { login, logout } = userSlice.actions;\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectUser = state => state.user.user;\r\n\r\nexport default userSlice.reducer;\r\n","import React, { useEffect, useState } from 'react';\nimport './Feed.css';\nimport CreateIcon from '@material-ui/icons/Create';\nimport ImageIcon from '@material-ui/icons/Image';\nimport SubscriptionsIcon from '@material-ui/icons/Subscriptions';\nimport EventNoteIcon from '@material-ui/icons/EventNote';\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\nimport InputOption from './InputOption';\nimport Post from '../Post/Post';\nimport { db } from '../../../firebase';\nimport firebase from 'firebase';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/userSlice';\nimport FlipMove from 'react-flip-move';\n\nfunction Feed() {\n  const user = useSelector(selectUser);\n\n  const [input, setInput] = useState('');\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n      setPosts(snapshot.docs.map(doc => (\n        {\n          id: doc.id,\n          data: doc.data(),\n        }\n      )))\n    ))\n  }, [])\n  \n  const sendPost = e => {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      name: user.displayName,\n      description: user.email,\n      message: input,\n      photoUrl: user.photoUrl || '',\n      timestamp: firebase.firestore.FieldValue.serverTimestamp(),\n    });\n    setInput(\"\");\n  };\n\n  return (\n    <div className=\"feed\">\n      <div className=\"feed_inputContainer\">\n        <div className=\"feed_input\">\n          <CreateIcon />\n          <form>\n            <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\n            <button onClick={sendPost} type=\"submit\">Send</button>\n          </form>\n        </div>\n        <div className=\"feed_inputOption\">\n          <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70b5f9\" />\n          <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#7E7A33E\" />\n          <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#C0CBCD\" />\n          <InputOption Icon={CalendarViewDayIcon} title=\"Write article\" color=\"#7FC15E\" />\n        </div>\n      </div>\n\n      <FlipMove>\n        {posts.map(({ id, data: { name, description, message, photoUrl}}) => (\n          <Post \n            key={id}\n            name={name}\n            description={description}\n            message={message}\n            photoUrl={photoUrl}\n          />\n        ))}\n      </FlipMove>\n    </div>\n  );\n};\n\nexport default Feed;\n","import { Avatar } from '@material-ui/core'\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../../features/userSlice';\n// import { Avatar } from '@material-ui/core';\nimport './Sidebar.css';\n\nfunction Sidebar() {\n  const user = useSelector(selectUser);\n\n  const recentItems = (topic) => (\n    <div className=\"recentItem\">\n      <span className=\"sidebar_hash\">#</span>\n      <p>{topic}</p>\n    </div>\n  );\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"sidebar_top\">\n        <img \n          src=\"https://images.unsplash.com/photo-1560345573-9f453083c335?ixlib=rb-1.2.1&ixid=MXwxMjA3fDB8MHxleHBsb3JlLWZlZWR8NjR8fHxlbnwwfHx8&auto=format&fit=crop&w=500&q=60\"\n          alt=\"cover pics\" \n        />\n        <Avatar src={user.photoUrl} className=\"sidebar_avatar\">\n          {user.email[0]}\n        </Avatar>\n        <h2>{user.displayName}</h2>\n        <h4>{user.email}</h4>\n      </div>\n      <div className=\"sidebar_stats\">\n        <div className=\"sidebar_stat\">\n          <p>Who viewed you</p>\n          <p className=\"stat_number\">2,432</p>\n        </div>\n        <div className=\"sidebar_stat\">\n          <p>Views on post</p>\n          <p className=\"stat_number\">1,232</p>\n        </div>\n      </div>\n\n      <div className=\"sidebar_bottom\">\n        <p>Recent</p>\n        {recentItems(\"reactjs\")}\n        {recentItems('JavaScript')}\n        {recentItems('Ruby')}\n        {recentItems('Ruby on Rails')}\n      </div>\n    </div>\n  )\n}\n\nexport default Sidebar\n","import React from 'react';\nimport './Widgets.css';\nimport InfoIcon from '@material-ui/icons/Info';\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\n\nfunction Widgets() {\n  const newsArticle = (heading, subtitle) => (\n    <div className=\"widget_article\">\n      <div className=\"widgets_articleleft\">\n        <FiberManualRecordIcon />\n      </div>\n\n      <div className=\"widgets_articleright\">\n        <h4>{heading}</h4>\n        <p>{subtitle}</p>\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"widgets\">\n      <div className=\"widget_header\">\n        <h2>LinkedIn News</h2>\n        <InfoIcon />\n      </div>\n\n      {newsArticle(\"Coronavirus: Lagos updates\", \"Tops news - 324 readers\")}\n      {newsArticle(\"Bitcoin hits new high\", \"Tops news - 2,324 readers\")}\n    </div>\n  )\n}\n\nexport default Widgets\n","import { Avatar } from '@material-ui/core';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectUser } from '../../features/userSlice';\nimport './HeaderOption.css';\n// import { Avatar } from '@material-ui/core';\n\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\n  const user = useSelector(selectUser);\n  \n  return (\n    <div onClick={onClick} className=\"headerOption\">\n      {Icon && <Icon className=\"headerOption_icon\" />}\n      {avatar && <Avatar className=\"headerOption_icon\" src={user?.photoUrl} />}\n      <h3 className=\"headerOption_title\">{title}</h3>\n    </div>\n  )\n}\n\nexport default HeaderOption\n","import React from 'react';\nimport './Header.css';\nimport SearchIcon from '@material-ui/icons/Search';\nimport HomeIcon from '@material-ui/icons/Home';\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport NotificationsIcon from '@material-ui/icons/Notifications';\nimport HeaderOption from './HeaderOption';\nimport { useDispatch } from 'react-redux';\nimport { auth } from '../../firebase';\nimport { logout } from '../../features/userSlice';\n\nfunction Header() {\n  const dispatch = useDispatch();\n\n  const logoutOfApp = () => {\n    dispatch(logout());\n    auth.signOut();\n  }\n\n  return (\n    <div className=\"header\">\n      <div className=\"header__left\">\n        <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"logoss\" />\n        <div className=\"header__search\">\n            <SearchIcon />\n            <input placeholder=\"Search\" type=\"text\" />\n        </div>\n      </div>\n      <div className=\"header__right\">\n        <HeaderOption Icon={HomeIcon} title=\"Home\" />\n        <HeaderOption Icon={SupervisorAccountIcon} title=\"My Network\" />\n        <HeaderOption Icon={BusinessCenterIcon} title=\"Jobs\" />\n        <HeaderOption Icon={ChatIcon} title=\"Messaging\" />\n        <HeaderOption Icon={NotificationsIcon} title=\"Notification\" />\n        <HeaderOption\n          avatar={true}\n          title=\"me\"\n          onClick={logoutOfApp}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport default Header\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../features/userSlice';\nimport { auth } from '../../firebase';\nimport './Login.css';\n\nfunction Login() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const [profilePic, setProfilePic] = useState('');\n\n  const dispatch = useDispatch();\n\n  const loginToApp = e => {\n    e.preventDefault();\n    auth.signInWithEmailAndPassword(email, password)\n      .then(userAuth => {\n        dispatch(login({\n          email: userAuth.user.email,\n          uid: userAuth.user.uid,\n          displayName: userAuth.user.displayName,\n          profileUrl: userAuth.user.photoURL,\n        }))\n      })\n      .catch(error => alert(error));\n  };\n\n  const register = () => {\n    if (!name) {\n      return alert(\"Please enter a full name\");\n    };\n\n    auth.createUserWithEmailAndPassword(email, password)\n      .then(userAuth => {\n        userAuth.user.updateProfile({\n          displayName: name,\n          photoURL: profilePic,\n        })\n        .then(() => {\n          dispatch(login({\n            email: userAuth.user.email,\n            uid: userAuth.user.uid,\n            displayName: name,\n            photoURL: profilePic,\n          }))\n        })\n      }).catch(error => alert(error));\n  };\n\n  return (\n    <div className=\"login\">\n      <img\n        src=\"https://www.pinclipart.com/picdir/middle/55-557165_graphic-transparent-library-file-logo-wikimedia-commons-transparent.png\"\n        alt=\"linkin logo\"\n      />\n\n      <form>\n        <input \n          type=\"text\"\n          value={name}\n          onChange={e => setName(e.target.value)}\n          placeholder=\"Full name (required if registering)\"\n        />\n        <input\n          type=\"text\"\n          value={profilePic}\n          onChange={e => setProfilePic(e.target.value)}\n          placeholder=\"Profile picture URL (optional)\"\n        />\n        <input\n          type=\"email\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n          placeholder=\"Email\"\n        />\n        <input\n          type=\"password\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n          placeholder=\"Password\"\n        />\n        <button type=\"submit\" onClick={loginToApp}>Sign In</button>\n      </form>\n      <p>\n        Not a member? {\" \"}\n        <span className=\"login_register\" onClick={register}>Register Now</span>\n      </p>\n    </div>\n  );\n}\n\nexport default Login\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport './App.css';\r\nimport Feed from './components/Body/Feed/Feed';\r\nimport Sidebar from './components/Body/Sidebar/Sidebar';\r\nimport Widgets from './components/Body/Widget/Widgets';\r\nimport Header from './components/Header/Header';\r\nimport Login from './components/Login/Login';\r\nimport { login, logout, selectUser } from './features/userSlice';\r\nimport { auth } from './firebase';\r\n\r\nfunction App() {\r\n  const user = useSelector(selectUser);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(userAuth => {\r\n      if (userAuth) {\r\n        // user is logged in\r\n        dispatch(login({\r\n          email: userAuth.email,\r\n          uid: userAuth.uid,\r\n          displayName: userAuth.displayName,\r\n          photoUrl: userAuth.photoURL,\r\n        }))\r\n      } else {\r\n        // use is logged out\r\n        dispatch(logout());\r\n      }\r\n    })\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Header />\r\n\r\n      {!user ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app_body\">\r\n          <Sidebar />\r\n          <Feed />\r\n          <Widgets />\r\n        </div>\r\n      )}\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport userReducer from '../features/userSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    user: userReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}